# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from platform.services.order import service_pb2 as platform_dot_services_dot_order_dot_service__pb2


class OrderServiceStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.find_order = channel.unary_unary(
                '/OrderService/find_order',
                request_serializer=platform_dot_services_dot_order_dot_service__pb2.Identifier.SerializeToString,
                response_deserializer=platform_dot_services_dot_order_dot_service__pb2.Order.FromString,
                )
        self.list_orders_for_user = channel.unary_unary(
                '/OrderService/list_orders_for_user',
                request_serializer=platform_dot_services_dot_order_dot_service__pb2.Identifier.SerializeToString,
                response_deserializer=platform_dot_services_dot_order_dot_service__pb2.OrderList.FromString,
                )


class OrderServiceServicer(object):
    """Missing associated documentation comment in .proto file"""

    def find_order(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def list_orders_for_user(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OrderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'find_order': grpc.unary_unary_rpc_method_handler(
                    servicer.find_order,
                    request_deserializer=platform_dot_services_dot_order_dot_service__pb2.Identifier.FromString,
                    response_serializer=platform_dot_services_dot_order_dot_service__pb2.Order.SerializeToString,
            ),
            'list_orders_for_user': grpc.unary_unary_rpc_method_handler(
                    servicer.list_orders_for_user,
                    request_deserializer=platform_dot_services_dot_order_dot_service__pb2.Identifier.FromString,
                    response_serializer=platform_dot_services_dot_order_dot_service__pb2.OrderList.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'OrderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OrderService(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def find_order(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OrderService/find_order',
            platform_dot_services_dot_order_dot_service__pb2.Identifier.SerializeToString,
            platform_dot_services_dot_order_dot_service__pb2.Order.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def list_orders_for_user(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/OrderService/list_orders_for_user',
            platform_dot_services_dot_order_dot_service__pb2.Identifier.SerializeToString,
            platform_dot_services_dot_order_dot_service__pb2.OrderList.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
